---
- name: Check trust compatibility
  fail:
    msg: Fapolicyd does not support trust setting fapolicyd_setup_trust
  ignore_errors: true
  when:
    - fapolicyd_setup_trust
    - ansible_facts.distribution_version is version("8.2", "<=")
  register: __failed_check

- name: Check integrity compatibility
  fail:
    msg: Fapolicyd does not support integrity setting fapolicyd_setup_integrity
  ignore_errors: true
  when:
    - fapolicyd_setup_integrity
    - ansible_facts.distribution_version is version("8.3", "<=")
  register: __failed_check

- name: Check trust files compatibility
  fail:
    msg: Fapolicyd does not support trust files setting fapolicyd_add_trusted_file
  ignore_errors: true
  when:
    - fapolicyd_add_trusted_file
    - ansible_facts.distribution_version is version("8.3", "<=")
  register: __failed_check

- name: Check failed conditions
  fail:
    msg: Multiple failed conditions
  #failed_when: true
  when: __failed_check


- name: Install fapolicyd packages
  package:
    name:
      - fapolicyd
    state: present

- name: Install fapolicyd-selinux packages
  package:
    name:
      - fapolicyd-selinux
    state: present
  when:
    - ansible_facts.distribution_version is version("8.3", ">=")

- name: Copy fapolicyd configuration file
  template:
    src: "{{ __fapolicyd_config_file }}.j2"
    dest: /etc/fapolicyd/{{ __fapolicyd_conf }}
    owner: root
    group: fapolicyd
    mode: '0644'

- name: Run fapolicyd configuration check
  command: fapolicyd-cli --check-config
  check_mode: false
  changed_when: false
  when:
    - ansible_facts.distribution_version is version("8.6", ">=")

- name: Trustdb cleanup
  command: fapolicyd-cli --file delete /
  when: fapolicyd_add_trusted_file
  failed_when: false

- name: Add file to trustdb
  command: fapolicyd-cli --file add {{ item | quote }}
  loop: "{{ (fapolicyd_add_trusted_file is string) | ternary([fapolicyd_add_trusted_file], fapolicyd_add_trusted_file) }}"
  when: fapolicyd_add_trusted_file

- name: Start fapolicyd service
  service:
    name: fapolicyd
    state: restarted
    enabled: true
  ignore_errors: true
  register: __fapolicyd_restart

- name: Making sure fapolicyd does not run if it was set so
  service:
    name: fapolicyd
    state: stopped
    enabled: false
  when: not fapolicyd_setup_enable_service

- name: Print errors upon failure
  command: journalctl -n5 -u {{ __fapolicyd_services }}
  changed_when: false
  register: __results
  when: __fapolicyd_restart is failed

- name: Print fapolicyd logs
  debug:
    var: __results.stdout_lines
  failed_when: true
